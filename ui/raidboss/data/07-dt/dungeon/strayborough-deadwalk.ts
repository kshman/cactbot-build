import Conditions from '../../../../../resources/conditions';
import Outputs from '../../../../../resources/outputs';
import { Responses } from '../../../../../resources/responses';
import ZoneId from '../../../../../resources/zone_id';
import { RaidbossData } from '../../../../../types/data';
import { TriggerSet } from '../../../../../types/trigger';

// TODO: Add basically anything to help with the doll charges.
// TODO: Warning for the falling Ferris wheel.
// TODO: Determine safe spots for Tea Awhirl
// TODO: Determine safe spots for Toiling Teapots

export interface Data extends RaidbossData {
  playerIsGhost: boolean;
  solidBitterLinesNext: boolean;
}

const triggerSet: TriggerSet<Data> = {
  id: 'The Strayborough Deadwalk',
  zoneId: ZoneId.TheStrayboroughDeadwalk,
  timelineFile: 'strayborough-deadwalk.txt',
  initData: () => {
    return {
      playerIsGhost: false,
      solidBitterLinesNext: false,
    };
  },
  triggers: [
    {
      id: 'Strayborough Deadwalk Leonogg Malicious Mist',
      type: 'StartsUsing',
      netRegex: { id: '8EB1', source: 'His Royal Headness Leonogg I', capture: false },
      response: Responses.aoe(),
    },
    {
      id: 'Strayborough Deadwalk Falling Nightmare',
      type: 'Ability',
      netRegex: { id: '8EAE', source: 'His Royal Headness Leonogg I', capture: false },
      infoText: (_data, _matches, output) => output.nightmare!(),
      outputStrings: {
        nightmare: {
          en: 'Avoid nightmare puddles',
          ko: 'ÎÇòÏù¥Ìä∏Î©îÏñ¥ Ïû•Ìåê ÌîºÌï¥Ïöî',
        },
      },
    },
    {
      id: 'Strayborough Deadwalk Spirited Charge',
      type: 'StartsUsing',
      netRegex: { id: '8EF6', source: 'His Royal Headness Leonogg I', capture: false },
      infoText: (_data, _matches, output) => output.charge!(),
      outputStrings: {
        charge: {
          en: 'Avoid charging dolls',
          ko: 'ÎèåÏßÑ Ïù∏Ìòï ÌîºÌï¥Ïöî',
        },
      },
    },
    {
      id: 'Strayborough Deadwalk Evil Scheme',
      type: 'StartsUsing',
      netRegex: { id: '9B02', source: 'His Royal Headness Leonogg I', capture: false },
      infoText: (_data, _matches, output) => output.exaflares!(),
      outputStrings: {
        exaflares: {
          en: 'Avoid exaflares',
          ko: 'ÏóëÏÇ¨ÌîåÎ†àÏñ¥ ÌîºÌï¥Ïöî',
        },
      },
    },
    {
      id: 'Strayborough Deadwalk Looming Nightmare',
      type: 'HeadMarker',
      netRegex: { id: '00C5' },
      condition: Conditions.targetIsYou(),
      alertText: (_data, _matches, output) => output.chasingPuddles!(),
      outputStrings: {
        chasingPuddles: {
          en: 'Chasing puddles on YOU',
          ko: 'ÎÇ¥Í≤å Ï´íÏïÑÏò§Îäî Ïû•Ìåê!',
        },
      },
    },
    {
      id: 'Strayborough Deadwalk Last Drop',
      type: 'HeadMarker',
      netRegex: { id: '00DA' },
      response: Responses.tankBuster(),
    },
    {
      id: 'Strayborough Deadwalk Sordid Steam',
      type: 'StartsUsing',
      netRegex: { id: '8F75', source: 'Jack-in-the-Pot', capture: false },
      response: Responses.aoe(),
    },
    {
      id: 'Strayborough Deadwalk Ghostly Guise Gain',
      type: 'GainsEffect',
      netRegex: { effectId: 'F6D' },
      condition: Conditions.targetIsYou(),
      run: (data) => data.playerIsGhost = true,
    },
    {
      id: 'Strayborough Deadwalk Ghostly Guise Lose',
      type: 'LosesEffect',
      netRegex: { effectId: 'F6D' },
      condition: Conditions.targetIsYou(),
      run: (data) => data.playerIsGhost = false,
    },
    {
      id: 'Strayborough Deadwalk Bitter Regret Middle',
      type: 'StartsUsing',
      netRegex: { id: '9113', source: 'Tr√§umerei', capture: false },
      response: Responses.goSides(),
    },
    {
      id: 'Strayborough Deadwalk Bitter Regret Sides',
      type: 'StartsUsing',
      netRegex: { id: '9114', source: 'Tr√§umerei', capture: false },
      response: Responses.goMiddle(),
    },
    {
      id: 'Strayborough Deadwalk Ill Intent',
      type: 'StartsUsing',
      netRegex: { id: '9AB7', source: 'Stray Geist' },
      condition: Conditions.targetIsYou(),
      alertText: (data, _matches, output) => {
        if (data.playerIsGhost)
          return output.ghostTether!();
        return output.fleshTether!();
      },
      outputStrings: {
        ghostTether: {
          en: 'Stretch tether',
          ko: 'Ï§Ñ ÎäòÎ†§Ïöî!',
        },
        fleshTether: {
          en: 'Become ghost => stretch tether',
          ko: 'Ïú†Î†πÏúºÎ°ú üîú Ï§Ñ ÎäòÎ†§Ïöî!',
        },
      },
    },
    {
      id: 'Strayborough Deadwalk Fleshbuster',
      type: 'StartsUsing',
      netRegex: { id: '911C', source: 'Tr√§umerei', capture: false },
      alertText: (data, _matches, output) => {
        if (data.playerIsGhost)
          return;
        return output.becomeGhost!();
      },
      infoText: (data, _matches, output) => {
        if (!data.playerIsGhost)
          return;
        return output.stayGhost!();
      },
      outputStrings: {
        becomeGhost: {
          en: 'Become a ghost',
          ko: 'Ïú†Î†πÏúºÎ°ú',
        },
        stayGhost: {
          en: 'Stay a ghost',
          ko: 'Í∑∏ÎåÄÎ°ú Ïú†Î†πÏù∏ Ï±ÑÎ°ú',
        },
      },
    },
    {
      // Despite this attack having spread marker visuals,
      // it doesn't actually do any damage if done correctly,
      // and stacking two or more has no effect.
      id: 'Strayborough Deadwalk Ghostduster',
      type: 'StartsUsing',
      netRegex: { id: '9119', source: 'Tr√§umerei', capture: false },
      alertText: (data, _matches, output) => {
        if (!data.playerIsGhost)
          return;
        return output.becomeFlesh!();
      },
      infoText: (data, _matches, output) => {
        if (data.playerIsGhost)
          return;
        return output.stayFlesh!();
      },
      outputStrings: {
        becomeFlesh: {
          en: 'Clear ghost status',
          ko: 'ÏÇ¨ÎûåÏúºÎ°ú',
        },
        stayFlesh: {
          en: 'Avoid ghost tiles',
          ko: 'ÏÇ¨ÎûåÏùÄ ÏÇ¨Îûå Í∑∏ÎåÄÎ°ú',
        },
      },
    },
    {
      id: 'Strayborough Deadwalk Tr√§umerei Malicious Mist',
      type: 'StartsUsing',
      netRegex: { id: '9130', source: 'Tr√§umerei', capture: false },
      response: Responses.bleedAoe(),
    },
    {
      // There are two different Bitter Regret mechanics from adds,
      // both of which use ID 91DC.
      // Fortunately, the two different mechanics are always bracketed by
      // Fleshbuster/Ghostduster and by Impact.
      // Thus, we look for any usage of these three skills and turn
      // the solid lines flag on or off as appropriate.
      id: 'Strayborough Deadwalk Alternate Lines Next',
      type: 'Ability',
      netRegex: { id: ['9119', '911C'], source: 'Tr√§umerei', capture: false },
      run: (data) => data.solidBitterLinesNext = false,
    },
    {
      id: 'Strayborough Deadwalk Solid Lines Next',
      type: 'Ability',
      netRegex: { id: '910D', source: 'Tr√§umerei', capture: false },
      run: (data) => data.solidBitterLinesNext = true,
    },
    {
      id: 'Strayborough Deadwalk Bitter Regret Alternate Lines',
      type: 'StartsUsing',
      netRegex: { id: '91DC', source: 'Stray Phantagenitrix', capture: false },
      condition: (data) => !data.solidBitterLinesNext,
      suppressSeconds: 10, // Don't warn on second set.
      infoText: (_data, _matches, output) => output.dodgeLines!(),
      outputStrings: {
        dodgeLines: {
          en: 'Start mid => Dodge lines',
          ko: 'ÌïúÍ∞ÄÏö¥Îç∞ üîú ÏÑ† ÌîºÌï¥Ïöî',
        },
      },
    },
    {
      // The lines are 4 units apart on center, in the range 130-166.
      // Centerline is 148 and never has a ghost. Lower values are left, higher values are right.
      id: 'Strayborough Deadwalk Bitter Regret Solid Lines',
      type: 'StartsUsing',
      netRegex: { id: '91DC', source: 'Stray Phantagenitrix' },
      condition: (data) => data.solidBitterLinesNext,
      suppressSeconds: 1, // Multiple instances start casting simultaneously.
      infoText: (_data, matches, output) => {
        const rightUnsafe = Math.round(parseFloat(matches.x)) > 149;
        if (rightUnsafe)
          return output.goLeft!();
        return output.goRight!();
      },
      outputStrings: {
        goRight: Outputs.right,
        goLeft: Outputs.left,
      },
    },
    {
      // As with some other stack lasers in 7.0 content,
      // this doesn't use the head marker log line,
      // instead simply insta-casting an unknown ability on the target.
      // The actual damage ability starts casting alongside.

      // Despite its name, this doesn't seem to be affected
      // by whether or not the targets are ghosts.
      id: 'Strayborough Deadwalk Ghostcrusher',
      type: 'Ability',
      netRegex: { id: '9118', source: 'Tr√§umerei' },
      response: Responses.stackMarkerOn(),
    },
  ],
  timelineReplace: [
    {
      'locale': 'de',
      'replaceSync': {
        'His Royal Headness Leonogg I': 'S.K.H Leokopf I.',
        'Jack-in-the-Pot': 'Polteegeist',
        'Noble Noggin': 'selbstlos(?:e|er|es|en) Sch√∂nkopf',
        'Spectral Samovar': 'Samowaah',
        'Stray Geist': 'mahrtastisch(?:e|er|es|en) Geist',
        'Stray Phantagenitrix': 'mahrtastisch(?:e|er|es|en) Genetrix',
        'Tr√§umerei': 'Tr√§umerei',
      },
      'replaceText': {
        '\\(cast\\)': '(wirken)',
        '\\(lines\\)': '(Linien)',
        '\\(middle/sides\\)': '(Mitte/Seiten)',
        '\\(plonk\\)': '(fallen)',
        '\\(sides\\)': '(Seiten)',
        '\\(solid lines\\)': '(feste Linien)',
        'Bitter Regret': 'Bittere Erinnerung',
        'Evil Scheme': 'Verruchtes Vorhaben',
        'Falling Nightmare': 'Albtraum-Stoff',
        'Fleshbuster': 'Lebendes Hack',
        'Ghostcrusher': 'Schwellende Sehnsucht',
        'Ghostduster': 'Geisterbereinigung',
        'Ill Intent': 'B√∂se Absichten',
        'Impact': 'Begraben',
        'Last Drop': 'Letzter Tropfen',
        'Looming Nightmare': 'Alberner Albtraum',
        'Malicious Mist': 'Niedertr√§chtiger Nebel',
        'Memorial March': 'Parade der Vergessenen',
        'Piping Pour': 'Einschenken',
        'Poltergeist': 'Poltergeist',
        'Scream': 'Schrei',
        'Sordid Steam': 'Dreckiger Dampf',
        'Spirited Charge': 'Mit dem Kopf durch die Wand',
        'Tea Awhirl': 'Ger√ºhrt, nicht gesch√ºttelt',
        'Team Spirit': 'Teamgeist',
        'Toiling Teapots': 'Trubel mit Tassen',
        'Tricksome Treat': 'Hinterh√§ltiger Hochgenuss',
        'Troubling Teacups': 'Trubel mit Tassen',
      },
    },
    {
      'locale': 'fr',
      'replaceSync': {
        'His Royal Headness Leonogg I': 'Sa Cabochest√© Boubouille Ier',
        'Jack-in-the-Pot': 'Diabloth√©',
        'Noble Noggin': 'Bonne bouille',
        'Spectral Samovar': 'Th√©i√®re spectrale',
        'Stray Geist': 'Fant√¥me errant',
        'Stray Phantagenitrix': 'Maman fant√¥me errante',
        'Tr√§umerei': 'Tr√§umerei',
      },
      'replaceText': {
        '\\(cast\\)': '(Incante)',
        '\\(lines\\)': '(Lignes)',
        '\\(middle/sides\\)': '(Milieu/C√¥t√©s)',
        '\\(plonk\\)': '(Tombe)',
        '\\(sides\\)': '(C√¥t√©s)',
        '\\(solid lines\\)': '(Lignes solides)',
        'Bitter Regret': 'Souvenirs amers',
        'Evil Scheme': 'Plan machiav√©lique',
        'Falling Nightmare': 'Chute cauchemardesque',
        'Fleshbuster': 'Hachoir √† chair',
        'Ghostcrusher': 'Lourde r√©miniscence',
        'Ghostduster': 'Purgation de spectre',
        'Ill Intent': 'Paire fatale',
        'Impact': 'Impact',
        'Last Drop': 'Derni√®re goutte',
        'Looming Nightmare': 'Terrain cauchemardesque',
        'Malicious Mist': 'Brume malfaisante',
        'Memorial March': 'Parade m√©moriale',
        'Piping Pour': 'Service',
        'Poltergeist': 'Esprit frappeur',
        'Scream': 'Cri',
        'Sordid Steam': 'Plan machiav√©lique',
        'Spirited Charge': 'Ordre d\'attaque',
        'Tea Awhirl': 'Tasses tournantes',
        'Team Spirit': 'Esprit d\'√©quipe',
        'Toiling Teapots': 'Th√©i√®res meurtri√®res',
        'Tricksome Treat': 'Diable en tasse',
        'Troubling Teacups': 'Tasses d\'ectoplasme',
      },
    },
    {
      'locale': 'ja',
      'missingTranslations': true,
      'replaceSync': {
        'His Royal Headness Leonogg I': '„Éé„ÉÉ„ÇÆ„É≥„Éª„Ç∂„Éª„Éä„Ç§„Çπ„Éò„ÉÉ„Éâ',
        'Jack-in-the-Pot': '„Ç∏„É£„ÉÉ„ÇØ„Éª„Ç§„É≥„Éª„Ç∂„Éª„Éù„ÉÉ„Éà',
        'Noble Noggin': '„Éä„Ç§„Çπ„Éò„ÉÉ„Éâ',
        'Spectral Samovar': '„Çπ„Éö„ÇØ„Éà„É©„É´„Éª„Çµ„É¢„ÉØ„Éº„É´',
        'Stray Geist': '„Çπ„Éà„É¨„Ç§„Éª„Ç¥„Éº„Çπ„Éà',
        'Stray Phantagenitrix': '„Çπ„Éà„É¨„Ç§„Éª„Éû„Ç∂„Éº„Ç¥„Éº„Çπ„Éà',
        'Tr√§umerei': '„Éà„É≠„Ç§„É°„É©„Ç§',
      },
      'replaceText': {
        'Bitter Regret': '„Éì„Çø„Éº„É°„É¢„É™„Éº„Ç∫',
        'Evil Scheme': '„Ç§„Éº„Éì„É´„Çπ„Ç≠„Éº„É†',
        'Falling Nightmare': '„Éä„Ç§„Éà„É°„Ç¢„Éï„Ç©„Éº„É´',
        'Fleshbuster': '„É™„Éì„É≥„Ç∞„Çπ„É©„Ç§„Çµ„Éº',
        'Ghostcrusher': '„Éò„Éì„Éº„É°„É¢„É™„Éº„Ç∫',
        'Ghostduster': '„Ç¥„Éº„Çπ„Éà„ÉÄ„Çπ„Çø„Éº',
        'Ill Intent': '„Ç§„Éº„Éì„É´„ÇΩ„Éº„Éà',
        'Impact': 'Ë°ùÊíÉ',
        'Last Drop': '„É©„Çπ„Éà„Éâ„É≠„ÉÉ„Éó',
        'Looming Nightmare': '„Éä„Ç§„Éà„É°„Ç¢„É´„Éº„É†',
        'Malicious Mist': '„Ç§„Éº„Éì„É´„Éü„Çπ„Éà',
        'Memorial March': '„É°„É¢„É™„Ç¢„É´„Éë„É¨„Éº„Éâ',
        'Piping Pour': '„Çµ„Éº„Éñ',
        'Poltergeist': '„Éù„É´„Çø„Éº„Ç¨„Ç§„Çπ„Éà',
        'Scream': '„Çπ„ÇØ„É™„Éº„É†',
        'Sordid Steam': '„Ç§„Éº„Éì„É´„Çπ„ÉÅ„Éº„É†',
        'Spirited Charge': 'Á™ÅÊíÉÂëΩ‰ª§',
        'Tea Awhirl': '„ÉÜ„Ç£„Éº„Ç¢„Éõ„ÉØ„Éº„É´',
        'Team Spirit': '„ÉÅ„Éº„É†„Çπ„Éî„É™„ÉÉ„Éà',
        'Toiling Teapots': '„ÉÜ„Ç£„Éº„Éù„ÉÉ„Éà',
        'Tricksome Treat': '„Éà„É™„ÉÉ„ÇØ„Çµ„É†„Éª„Éà„É™„Éº„Éà',
        'Troubling Teacups': '„ÉÜ„Ç£„Éº„Ç´„ÉÉ„Éó',
      },
    },
    {
      'locale': 'cn',
      'replaceSync': {
        'His Royal Headness Leonogg I': 'Â•ΩËÑëË¢ãÂ§ßÁéã',
        'Jack-in-the-Pot': 'Ëå∂Â£∂ÈáåÁöÑÂ∞è‰∏ë',
        'Noble Noggin': 'Â•ΩËÑëË¢ã',
        'Spectral Samovar': 'ÂπªÂÖâËå∂Â£∂',
        'Stray Geist': 'Ëø∑ÈÄîÁöÑÂπΩÁÅµ',
        'Stray Phantagenitrix': 'Ëø∑ÈÄîÁöÑÂπΩÁÅµ‰πãÊØç',
        'Tr√§umerei': 'Ê¢¶ÂÉè',
      },
      'replaceText': {
        '\\(cast\\)': '(ÂíèÂî±)',
        '\\(lines\\)': '(Áõ¥Á∫ø)',
        '\\(middle/sides\\)': '(‰∏≠Èó¥/‰∏§‰æß)',
        '\\(plonk\\)': '(Á†∏‰∏ã)',
        '\\(sides\\)': '(‰∏§‰æß)',
        '\\(solid lines\\)': '(ÂçäÂú∫)',
        'Bitter Regret': 'Ê∂àÊûÅÂõûÂøÜ',
        'Evil Scheme': 'ÈÇ™ÊÅ∂ËØ°ËÆ°',
        'Falling Nightmare': 'Âô©Ê¢¶Èôç‰∏¥',
        'Fleshbuster': 'ÊàÆËÇâ',
        'Ghostcrusher': 'Ê≤âÈáçÂõûÂøÜ',
        'Ghostduster': 'Èô§ÁÅµ',
        'Ill Intent': 'ÈÇ™Âøµ',
        'Impact': 'ÂÜ≤Âáª',
        'Last Drop': 'ÊúÄÂêé‰∏ÄÊª¥',
        'Looming Nightmare': 'Âô©Ê¢¶ÈÄºËøë',
        'Malicious Mist': 'ÈÇ™ÊÅ∂Ëø∑Èõæ',
        'Memorial March': 'ÊÇºÂøµÊ∏∏Ë°å',
        'Piping Pour': 'ÂÄíËå∂',
        'Poltergeist': 'È™öÁÅµ',
        'Scream': 'Â∞ñÂï∏',
        'Sordid Steam': 'ÈÇ™ÊÅ∂Ëí∏Ê±Ω',
        'Spirited Charge': 'Á™ÅÂáªÂëΩ‰ª§',
        'Tea Awhirl': 'ÊóãËΩ¨Ëå∂ÊùØ',
        'Team Spirit': 'Âêà‰ΩúÁ•ûÁ≤æ',
        'Toiling Teapots': 'Ëå∂Â£∂',
        'Tricksome Treat': 'Êç£ËõãÂºèÊ¨æÂæÖ',
        'Troubling Teacups': 'Ëå∂ÊùØ',
      },
    },
    {
      'locale': 'ko',
      'replaceSync': {
        'His Royal Headness Leonogg I': 'Î©ãÏßÑ Î®∏Î¶¨ ÎÖ∏Í∏¥',
        'Jack-in-the-Pot': 'Ï£ºÏ†ÑÏûê Ïû≠',
        'Noble Noggin': 'Î©ãÏßÑ Î®∏Î¶¨',
        'Spectral Samovar': 'Ïú†Î†π Ï£ºÏ†ÑÏûê',
        'Stray Geist': 'Ìó§Îß§Îäî Ïú†Î†π',
        'Stray Phantagenitrix': 'Ìó§Îß§Îäî ÏóÑÎßà Ïú†Î†π',
        'Tr√§umerei': 'Ìä∏Î°úÏù¥Î©îÎùºÏù¥',
      },
      'replaceText': {
        '\\(cast\\)': '(ÏãúÏ†Ñ)',
        '\\(lines 1\\)': '(ÏßÅÏÑ†Ïû•Ìåê 1)',
        '\\(lines 2\\)': '(ÏßÅÏÑ†Ïû•Ìåê 2)',
        '\\(middle/sides\\)': '(Ï§ëÏïô/ÏñëÏòÜ)',
        '\\(plonk\\)': '(Îñ®Ïñ¥Ïßê)',
        '\\(sides\\)': '(ÏñëÏòÜ)',
        '\\(solid lines\\)': '(Ï†àÎ∞ò)',
        'Bitter Regret': 'Î∂ÄÏ†ïÏ†ÅÏù∏ Í∏∞Ïñµ',
        'Evil Scheme': 'ÏÇ¨ÏïÖÌïú Í≥ÑÌöç',
        'Falling Nightmare': 'ÏïÖÎ™Ω ÎÇôÌïò',
        'Fleshbuster': 'Ïú°Ï≤¥ Ï†àÎã®',
        'Ghostcrusher': 'Î¨¥Í±∞Ïö¥ Í∏∞Ïñµ',
        'Ghostduster': 'Ïú†Î†π Ï≤≠ÏÜå',
        'Ill Intent': 'ÏÇ¨ÏïÖÌïú Ïó∞Í∏∞',
        'Impact': 'Ï∂©Í≤©',
        'Last Drop': 'ÎßàÏßÄÎßâ Ìïú Î∞©Ïö∏',
        'Looming Nightmare': 'ÏïÖÎ™ΩÏùò Î∞©',
        'Malicious Mist': 'ÏÇ¨ÏïÖÌïú ÏïàÍ∞ú',
        'Memorial March': 'Í∏∞ÎÖê ÌñâÏßÑ',
        'Piping Pour': 'Ï∞ªÎ¨º Îî∞Î•¥Í∏∞',
        'Poltergeist': 'Ìè¥ÌÑ∞Í∞ÄÏù¥Ïä§Ìä∏',
        'Scream': 'Ï†àÍ∑ú',
        'Sordid Steam': 'ÏÇ¨ÏïÖÌïú Ï¶ùÍ∏∞',
        'Spirited Charge': 'ÎèåÍ≤© Î™ÖÎ†π',
        'Tea Awhirl': 'Ï∞ªÏûî ÎèåÎ¶¨Í∏∞',
        'Team Spirit': 'ÏòÅÌòº ÏÜåÏßë',
        'Toiling Teapots': 'Ï∞ªÏ£ºÏ†ÑÏûê',
        'Tricksome Treat': 'ÍπúÏßù ÎÜÄÎûêÏßÄ',
        'Troubling Teacups': 'Ï∞ªÏûî',
      },
    },
  ],
};

export default triggerSet;
